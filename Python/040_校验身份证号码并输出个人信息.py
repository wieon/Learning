# 中国目前采用的是18位身份证号，其第7-10位数字是出生年，11-12位是出生月份，13-14是出生日期，第17位是性别，奇数为男性，偶数为女性，第18位是校验位。

# 如果身份证号码的其中一位填错了（包括最后一个校验位），则校验算法可以检测出来。如果身份证号的相邻2位填反了，则校验算法可以检测出来。校验规则如下：

# 将前面的身份证号码17位数分别乘以不同的系数。从第一位到第十七位的系数分别为：7－9－10－5－8－4－2－1－6－3－7－9－10－5－8－4－2。
# 将这17位数字和系数相乘的结果相加。
# 用加出来和除以11，看余数只可能是：0－1－2－3－4－5－6－7－8－9－10，分别对应的最后一位身份证的号码为：1－0－X－9－8－7－6－5－4－3－2
# 通过上面得知如果余数是2，就会在身份证的第18位数字上出现罗马数字的X（大写英文字母X）。如果余数是10，身份证的最后一位号码就是2。
# 用户输入一个身份证号，校验其是否是合法的身份证号码，如身份证号码不合法输出“身份证校验位错误！”，如身份证号码合法则分别在4行中输出“身份证号码校验为合法号码！”，并输出该人的出生年月日和性别。

def ID_verif(n):
    lst1 = [eval(i) for i in n[:-1]]
    coefficient = [7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2]
    lst2 = list(map(lambda x, y : x * y, coefficient,lst1))
    remainder = {0:'1', 1:'0', 2:'X', 3:'9', 4:'8', 5:'7', 6:'6', 7:'5', 8:'4', 9:'3', 10:'2'}
    if n[-1] != remainder[sum(lst2)%11]:
        print(remainder[sum(lst2)%11])
        print('身份证校验位错误！')
    else:
        print('身份证号码校验为合法号码！')
        print(f'出生：{n[6:10]}年{n[10:12]}月{n[12:14]}日')
        print('性别：女') if lst1[-1]%2 == 0 else print('性别：男')

if __name__ == '__main__':
    n = input()
    ID_verif(n)

