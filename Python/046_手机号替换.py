# 描述
# 用户输入一个11位的纯属数字的手机号码，将4-7位用 “*” 替换掉，以保护隐私。

# 输入格式
# 输入一个11位的纯属数字的手机号码

# 输出格式
# 替换后的手机号


# 字符串切片拼接法
s = input()
print(s[0:3] + '****' + s[7:11])
print(s[:3] + '****' + s[7:])
 
 
# 字符串替换方法
s = input()    # 13988776777
print(s.replace(s[3:7], '****',1))  # 139****6777
s_new = s.replace(s[3:7],'****',1)  # 4-7位上的字符替换为“****”，只替换一次
print(s_new)                        # 139****6777
 
# 可以直接将str.replace()函数 作为print()的参数直接输出其返回值
print(s.replace(s[3:7],'****',1))   # 返回值是替换后的字符串，139****6777
print(s)                            # 字符串s 本身并未改变，13988776777，替换后会创新新对象，不影响原字符串的值
​
# 第三个参数 max不可省略，否则某些数据会替换异常
print(s.replace(s[3:7],'****'))
​
# 例如输入 13413413413，替换后的字符串，****34****3
# s[3:7]的值是'1341',解释器会从头开始查找子串'1341'并替换
# 例如输入 13912341234，替换后的字符串，139********
# s[3:7]的值是'1234',解释器会从头开始查找子串'1234'并替换